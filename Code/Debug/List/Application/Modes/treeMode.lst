###############################################################################
#
# IAR ANSI C/C++ Compiler V9.30.1.335/W64 for ARM         19/Dec/2024  14:58:19
# Copyright 1999-2022 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Modes\treeMode.cpp
#    Command line                 =
#        -f
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Debug\Obj\Application\Modes\treeMode.o.rsp
#        (D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Modes\treeMode.cpp
#        -lC
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Debug\List\Application\Modes
#        -lA
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Debug\List\Application\Modes
#        -o
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Debug\Obj\Application\Modes
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        D:\Programs\IAR\arm\inc\c\DLib_Config_Normal.h -I
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Common\ -I
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\AHardware\Registers\STM32F411\FieldValues\
#        -I
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\AHardware\Registers\STM32F411\
#        -I D:\Documents\Homework\GitLab\Lab1_1\Lab1\AHardware\Registers\ -I
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\AHardware\Registers\CortexM4\
#        -I
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\AHardware\Registers\CortexM4\FieldValues\
#        -I D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Leds\ -I
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Leds\Contracts\
#        -I D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Modes\ -I
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Modes\Contracts\
#        -I D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Leds\Config\
#        -I D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Modes\Config\
#        -I D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Button\ -I
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Button\Contracts\
#        -On --c++ --no_exceptions --no_rtti) --dependencies=n
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Debug\Obj\Application\Modes\treeMode.o.d
#    Locale                       =  C
#    List file                    =
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Debug\List\Application\Modes\treeMode.lst
#    Object file                  =
#        D:\Documents\Homework\GitLab\Lab1_1\Lab1\Debug\Obj\Application\Modes\treeMode.o
#    Runtime model:                  
#      __CPP_Exceptions           =  Disabled
#      __CPP_Language             =  C++14
#      __CPP_Library              =  DLib
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

D:\Documents\Homework\GitLab\Lab1_1\Lab1\Application\Modes\treeMode.cpp
      1          #include "treeMode.h"

   \                                 In section .text, align 2
   \   __vfp ILed **std::_Addressof<ILed *>(ILed *&, std::false_type) noexcept
   \                     _ZSt10_AddressofIP4ILedEPT_RS2_St17integral_constantIbLb0EE: (+1)
   \        0x0   0x4770             BX       LR

   \                                 In section .text, align 4
   \   __vfp ILed **std::addressof<ILed *>(ILed *&) noexcept
   \                     _ZSt9addressofIP4ILedEPT_RS2_: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x4802             LDR.N    R0,??addressof_0
   \        0x6   0x7801             LDRB     R1,[R0, #+0]
   \        0x8   0x0020             MOVS     R0,R4
   \        0xA   0x.... 0x....      BL       _ZSt10_AddressofIP4ILedEPT_RS2_St17integral_constantIbLb0EE
   \        0xE   0xBD10             POP      {R4,PC}
   \                     ??addressof_0:
   \       0x10   0x....'....        DC32     ?_0

   \                                 In section .text, align 2
   \   __vfp std::_Array_const_iterator<ILed *, 4U>::_Array_const_iterator(ILed *const *, size_t)
   \                     _ZNSt21_Array_const_iteratorIP4ILedLj4EEC1EPKS1_j: (+1)
   \        0x0   0xEB01 0x0382      ADD      R3,R1,R2, LSL #+2
   \        0x4   0x6003             STR      R3,[R0, #+0]
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp std::_Array_const_iterator<ILed *, 4U>::subobject _Array_const_iterator(ILed *const *, size_t)
   \                     _ZNSt21_Array_const_iteratorIP4ILedLj4EEC2EPKS1_j: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZNSt21_Array_const_iteratorIP4ILedLj4EEC1EPKS1_j
   \        0xA   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2
   \   __vfp ILed *const & std::_Array_const_iterator<ILed *, 4U>::operator*() const
   \                     _ZNKSt21_Array_const_iteratorIP4ILedLj4EEdeEv: (+1)
   \        0x0   0x6800             LDR      R0,[R0, #+0]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp std::_Array_const_iterator<ILed *, 4U> &std::_Array_const_iterator<ILed *, 4U>::operator++()
   \                     _ZNSt21_Array_const_iteratorIP4ILedLj4EEppEv: (+1)
   \        0x0   0x6801             LDR      R1,[R0, #+0]
   \        0x2   0x1D09             ADDS     R1,R1,#+4
   \        0x4   0x6001             STR      R1,[R0, #+0]
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp bool std::_Array_const_iterator<ILed *, 4U>::operator==(std::_Array_const_iterator<ILed *, 4U> const &) const
   \                     _ZNKSt21_Array_const_iteratorIP4ILedLj4EEeqERKS2_: (+1)
   \        0x0   0x6800             LDR      R0,[R0, #+0]
   \        0x2   0x6809             LDR      R1,[R1, #+0]
   \        0x4   0x4288             CMP      R0,R1
   \        0x6   0xD101             BNE.N    `??operator==_0`
   \        0x8   0x2001             MOVS     R0,#+1
   \        0xA   0xE000             B.N      `??operator==_1`
   \                     `??operator==_0`: (+1)
   \        0xC   0x2000             MOVS     R0,#+0
   \                     `??operator==_1`: (+1)
   \        0xE   0xB2C0             UXTB     R0,R0
   \       0x10   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp bool std::_Array_const_iterator<ILed *, 4U>::operator!=(std::_Array_const_iterator<ILed *, 4U> const &) const
   \                     _ZNKSt21_Array_const_iteratorIP4ILedLj4EEneERKS2_: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0029             MOVS     R1,R5
   \        0x8   0x0020             MOVS     R0,R4
   \        0xA   0x.... 0x....      BL       _ZNKSt21_Array_const_iteratorIP4ILedLj4EEeqERKS2_
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD101             BNE.N    `??operator!=_0`
   \       0x12   0x2001             MOVS     R0,#+1
   \       0x14   0xE000             B.N      `??operator!=_1`
   \                     `??operator!=_0`: (+1)
   \       0x16   0x2000             MOVS     R0,#+0
   \                     `??operator!=_1`: (+1)
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0xBD32             POP      {R1,R4,R5,PC}

   \                                 In section .text, align 2
   \   __vfp std::_Array_iterator<ILed *, 4U>::_Array_iterator(ILed **, size_t)
   \                     _ZNSt15_Array_iteratorIP4ILedLj4EEC1EPS1_j: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
   \        0x8   0x0032             MOVS     R2,R6
   \        0xA   0x0029             MOVS     R1,R5
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0x.... 0x....      BL       _ZNSt21_Array_const_iteratorIP4ILedLj4EEC2EPKS1_j
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0xBD70             POP      {R4-R6,PC}

   \                                 In section .text, align 2
   \   __vfp ILed *& std::_Array_iterator<ILed *, 4U>::operator*() const
   \                     _ZNKSt15_Array_iteratorIP4ILedLj4EEdeEv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZNKSt21_Array_const_iteratorIP4ILedLj4EEdeEv
   \        0xA   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2
   \   __vfp std::_Array_iterator<ILed *, 4U> &std::_Array_iterator<ILed *, 4U>::operator++()
   \                     _ZNSt15_Array_iteratorIP4ILedLj4EEppEv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZNSt21_Array_const_iteratorIP4ILedLj4EEppEv
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2
   \   __vfp std::array<ILed *, 4U>::iterator std::array<ILed *, 4U>::begin() noexcept
   \                     _ZNSt5arrayIP4ILedLj4EE5beginEv: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZSt9addressofIP4ILedEPT_RS2_
   \        0xA   0x0001             MOVS     R1,R0
   \        0xC   0x2200             MOVS     R2,#+0
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       _ZNSt15_Array_iteratorIP4ILedLj4EEC1EPS1_j
   \       0x14   0x9800             LDR      R0,[SP, #+0]
   \       0x16   0xBD16             POP      {R1,R2,R4,PC}

   \                                 In section .text, align 2
   \   __vfp std::array<ILed *, 4U>::iterator std::array<ILed *, 4U>::end() noexcept
   \                     _ZNSt5arrayIP4ILedLj4EE3endEv: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZSt9addressofIP4ILedEPT_RS2_
   \        0xA   0x0001             MOVS     R1,R0
   \        0xC   0x2204             MOVS     R2,#+4
   \        0xE   0x4668             MOV      R0,SP
   \       0x10   0x.... 0x....      BL       _ZNSt15_Array_iteratorIP4ILedLj4EEC1EPS1_j
   \       0x14   0x9800             LDR      R0,[SP, #+0]
   \       0x16   0xBD16             POP      {R1,R2,R4,PC}

   \                                 In section .text, align 2
   \   __vfp size_t std::array<ILed *, 4U>::size() const noexcept
   \                     _ZNKSt5arrayIP4ILedLj4EE4sizeEv: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x2004             MOVS     R0,#+4
   \        0x4   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp ILed *& std::array<ILed *, 4U>::operator[](size_t)
   \                     _ZNSt5arrayIP4ILedLj4EEixEj: (+1)
   \        0x0   0xEB00 0x0081      ADD      R0,R0,R1, LSL #+2
   \        0x4   0x4770             BX       LR

   \                                 In section .text, align 2
   \   __vfp IMode::subobject IMode() noexcept
   \                     _ZN5IModeC2Ev: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZN5IModeC1Ev
   \        0xA   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2
   \   __vfp IMode::IMode() noexcept
   \                     _ZN5IModeC1Ev: (+1)
   \        0x0   0x4770             BX       LR
      2          

   \                                 In section .text, align 2, keep-with-next
   \   __vfp TreeMode::subobject TreeMode(tLeds &)
   \                     _ZN8TreeModeC2ERSt5arrayIP4ILedLj4EE: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZN8TreeModeC1ERSt5arrayIP4ILedLj4EE
   \        0xA   0xBD10             POP      {R4,PC}

   \                                 In section .text, align 2, keep-with-next
      3          TreeMode::TreeMode(tLeds& ledsArr): leds(ledsArr)
      4          {
   \                     _ZN8TreeModeC1ERSt5arrayIP4ILedLj4EE: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x.... 0x....      BL       _ZN5IModeC2Ev
   \        0xC   0x....             LDR.N    R0,??DataTable1
   \        0xE   0x6020             STR      R0,[R4, #+0]
   \       0x10   0x6065             STR      R5,[R4, #+4]
      5            
      6          }
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0xBD32             POP      {R1,R4,R5,PC}
      7          

   \                                 In section .text, align 2, keep-with-next
      8          void TreeMode::Update()
      9          {
   \                     _ZN8TreeMode6UpdateEv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
     10            leds[currentLedIndex]->Switch();
   \        0x4   0x68A1             LDR      R1,[R4, #+8]
   \        0x6   0x6860             LDR      R0,[R4, #+4]
   \        0x8   0x.... 0x....      BL       _ZNSt5arrayIP4ILedLj4EEixEj
   \        0xC   0x6800             LDR      R0,[R0, #+0]
   \        0xE   0x6801             LDR      R1,[R0, #+0]
   \       0x10   0x6849             LDR      R1,[R1, #+4]
   \       0x12   0x4788             BLX      R1
     11            currentLedIndex++;
   \       0x14   0x68A0             LDR      R0,[R4, #+8]
   \       0x16   0x1C40             ADDS     R0,R0,#+1
   \       0x18   0x60A0             STR      R0,[R4, #+8]
     12            if(currentLedIndex >= leds.size())
   \       0x1A   0x6860             LDR      R0,[R4, #+4]
   \       0x1C   0x.... 0x....      BL       _ZNKSt5arrayIP4ILedLj4EE4sizeEv
   \       0x20   0x68A1             LDR      R1,[R4, #+8]
   \       0x22   0x4281             CMP      R1,R0
   \       0x24   0xD301             BCC.N    ??Update_0
     13            {
     14              currentLedIndex = 0;
   \       0x26   0x2000             MOVS     R0,#+0
   \       0x28   0x60A0             STR      R0,[R4, #+8]
     15            }
     16          }
   \                     ??Update_0: (+1)
   \       0x2A   0xBD10             POP      {R4,PC}
     17          

   \                                 In section .text, align 2, keep-with-next
     18          void TreeMode::Init()
     19          {
   \                     _ZN8TreeMode4InitEv: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
     20            currentLedIndex = 0;
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x60A0             STR      R0,[R4, #+8]
     21            for(auto it: leds)
   \        0x8   0x6865             LDR      R5,[R4, #+4]
   \        0xA   0x0028             MOVS     R0,R5
   \        0xC   0x.... 0x....      BL       _ZNSt5arrayIP4ILedLj4EE5beginEv
   \       0x10   0x9000             STR      R0,[SP, #+0]
   \       0x12   0x0028             MOVS     R0,R5
   \       0x14   0x.... 0x....      BL       _ZNSt5arrayIP4ILedLj4EE3endEv
   \       0x18   0x9001             STR      R0,[SP, #+4]
   \                     ??Init_0: (+1)
   \       0x1A   0xA901             ADD      R1,SP,#+4
   \       0x1C   0x4668             MOV      R0,SP
   \       0x1E   0x.... 0x....      BL       _ZNKSt21_Array_const_iteratorIP4ILedLj4EEneERKS2_
   \       0x22   0x2800             CMP      R0,#+0
   \       0x24   0xD00C             BEQ.N    ??Init_1
   \       0x26   0x4668             MOV      R0,SP
   \       0x28   0x.... 0x....      BL       _ZNKSt15_Array_iteratorIP4ILedLj4EEdeEv
   \       0x2C   0x6800             LDR      R0,[R0, #+0]
   \       0x2E   0x0005             MOVS     R5,R0
     22            {
     23              it->Light();
   \       0x30   0x0028             MOVS     R0,R5
   \       0x32   0x6829             LDR      R1,[R5, #+0]
   \       0x34   0x6809             LDR      R1,[R1, #+0]
   \       0x36   0x4788             BLX      R1
     24            }
   \       0x38   0x4668             MOV      R0,SP
   \       0x3A   0x.... 0x....      BL       _ZNSt15_Array_iteratorIP4ILedLj4EEppEv
   \       0x3E   0xE7EC             B.N      ??Init_0
     25            
     26          }
   \                     ??Init_1: (+1)
   \       0x40   0xBD37             POP      {R0-R2,R4,R5,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0x....'....        DC32     _ZTV8TreeMode+0x8

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   IMode::IMode() noexcept
       8   IMode::subobject IMode() noexcept
         8   -> IMode::IMode() noexcept
      24   TreeMode::Init()
        24   -- Indirect call
        24   -> std::_Array_const_iterator<ILed *, 4U>::operator!=(std::_Array_const_iterator<ILed *, 4U> const &) const
        24   -> std::_Array_iterator<ILed *, 4U>::operator*() const
        24   -> std::_Array_iterator<ILed *, 4U>::operator++()
        24   -> std::array<ILed *, 4U>::begin() noexcept
        24   -> std::array<ILed *, 4U>::end() noexcept
      16   TreeMode::TreeMode(tLeds &)
        16   -> IMode::subobject IMode() noexcept
       8   TreeMode::Update()
         8   -- Indirect call
         8   -> std::array<ILed *, 4U>::operator[](size_t)
         8   -> std::array<ILed *, 4U>::size() const noexcept
       8   TreeMode::subobject TreeMode(tLeds &)
         8   -> TreeMode::TreeMode(tLeds &)
       0   std::_Addressof<ILed *>(ILed *&, std::false_type) noexcept
       0   std::_Array_const_iterator<ILed *, 4U>::_Array_const_iterator(ILed *const *, size_t)
      16   std::_Array_const_iterator<ILed *, 4U>::operator!=(std::_Array_const_iterator<ILed *, 4U> const &) const
        16   -> std::_Array_const_iterator<ILed *, 4U>::operator==(std::_Array_const_iterator<ILed *, 4U> const &) const
       0   std::_Array_const_iterator<ILed *, 4U>::operator*() const
       0   std::_Array_const_iterator<ILed *, 4U>::operator++()
       0   std::_Array_const_iterator<ILed *, 4U>::operator==(std::_Array_const_iterator<ILed *, 4U> const &) const
       8   std::_Array_const_iterator<ILed *, 4U>::subobject _Array_const_iterator(ILed *const *, size_t)
         8   -> std::_Array_const_iterator<ILed *, 4U>::_Array_const_iterator(ILed *const *, size_t)
      16   std::_Array_iterator<ILed *, 4U>::_Array_iterator(ILed **, size_t)
        16   -> std::_Array_const_iterator<ILed *, 4U>::subobject _Array_const_iterator(ILed *const *, size_t)
       8   std::_Array_iterator<ILed *, 4U>::operator*() const
         8   -> std::_Array_const_iterator<ILed *, 4U>::operator*() const
       8   std::_Array_iterator<ILed *, 4U>::operator++()
         8   -> std::_Array_const_iterator<ILed *, 4U>::operator++()
       8   std::addressof<ILed *>(ILed *&) noexcept
         8   -> std::_Addressof<ILed *>(ILed *&, std::false_type) noexcept
      16   std::array<ILed *, 4U>::begin() noexcept
        16   -> std::_Array_iterator<ILed *, 4U>::_Array_iterator(ILed **, size_t)
        16   -> std::addressof<ILed *>(ILed *&) noexcept
      16   std::array<ILed *, 4U>::end() noexcept
        16   -> std::_Array_iterator<ILed *, 4U>::_Array_iterator(ILed **, size_t)
        16   -> std::addressof<ILed *>(ILed *&) noexcept
       0   std::array<ILed *, 4U>::operator[](size_t)
       0   std::array<ILed *, 4U>::size() const noexcept


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       2  IMode::IMode() noexcept
      12  IMode::subobject IMode() noexcept
      66  TreeMode::Init()
      22  TreeMode::TreeMode(tLeds &)
      44  TreeMode::Update()
      12  TreeMode::subobject TreeMode(tLeds &)
       2  std::_Addressof<ILed *>(ILed *&, std::false_type) noexcept
       8  std::_Array_const_iterator<ILed *, 4U>::_Array_const_iterator(ILed *const *, size_t)
      28  std::_Array_const_iterator<ILed *, 4U>::operator!=(std::_Array_const_iterator<ILed *, 4U> const &) const
       4  std::_Array_const_iterator<ILed *, 4U>::operator*() const
       8  std::_Array_const_iterator<ILed *, 4U>::operator++()
      18  std::_Array_const_iterator<ILed *, 4U>::operator==(std::_Array_const_iterator<ILed *, 4U> const &) const
      12  std::_Array_const_iterator<ILed *, 4U>::subobject _Array_const_iterator(ILed *const *, size_t)
      22  std::_Array_iterator<ILed *, 4U>::_Array_iterator(ILed **, size_t)
      12  std::_Array_iterator<ILed *, 4U>::operator*() const
      14  std::_Array_iterator<ILed *, 4U>::operator++()
      20  std::addressof<ILed *>(ILed *&) noexcept
      24  std::array<ILed *, 4U>::begin() noexcept
      24  std::array<ILed *, 4U>::end() noexcept
       6  std::array<ILed *, 4U>::operator[](size_t)
       6  std::array<ILed *, 4U>::size() const noexcept
      97  -- Other

 
  97 bytes in section .rodata
 370 bytes in section .text
 
 148 bytes of CODE  memory (+ 222 bytes shared)
   1 byte  of CONST memory (+  96 bytes shared)

Errors: none
Warnings: none
